# Dependencies

workspace(name = "bnr_data_product")

new_http_archive(
  name = "gtest",
  url = "https://github.com/google/googletest/archive/release-1.8.0.zip",
  sha256 = "f3ed3b58511efd272eb074a3a6d6fb79d7c2e6a0e374323d1e6bcbcc1ef141bf",
  build_file = "build/3rdparty/gtest.BUILD",
  strip_prefix = "googletest-release-1.8.0",
)

new_http_archive(
  name = "opencv",
  url = "https://github.com/opencv/opencv/archive/3.1.0.tar.gz",
  sha256 = "f3b160b9213dd17aa15ddd45f6fb06017fe205359dbd1f7219aad59c98899f15",
  build_file = "build/3rdparty/opencv.BUILD",
  strip_prefix = "opencv-3.1.0",
)

new_http_archive(
  name = "jsoncpp",
  url = "https://github.com/open-source-parsers/jsoncpp/archive/1.8.4.tar.gz",
  sha256 = "c49deac9e0933bcb7044f08516861a2d560988540b23de2ac1ad443b219afdb6",
  build_file = "build/3rdparty/jsoncpp.BUILD",
  strip_prefix = "jsoncpp-1.8.4",
)

new_http_archive(
    name = "eigen",
    url = "http://bitbucket.org/eigen/eigen/get/3.2.10.tar.gz",
    build_file = "build/3rdparty/eigen.BUILD",
    sha256 = "04f8a4fa4afedaae721c1a1c756afeea20d3cdef0ce3293982cf1c518f178502",
    strip_prefix = "eigen-eigen-b9cd8366d4e8",
)

# Set up custom bazel Python rules
git_repository(
    name = "io_bazel_rules_python",
    remote = "https://github.com/jkinkead/rules_python.git",
    commit = "220c1133af2bb5c37f20c87b4c2ccfeee596ecda",
)

load("@io_bazel_rules_python//python:pip.bzl", "pip_repositories")
pip_repositories()

# Load pip repos for this project
load("@io_bazel_rules_python//python:pip.bzl", "pip_import")
pip_import(
    name = "py_deps",
    requirements = "//python:requirements/bazel.txt",
)

# Load pip_install symbol and create repos
load("@py_deps//:requirements.bzl", "pip_install")
pip_install()
